{{#> admin.layout title=title }}
  {{#*inline "style"}}
    <link rel="stylesheet" href="/dist/css/form.css">
  {{/inline}}
  {{#*inline "content"}}
    <div class="content-header">
      <div class="container-fluid">
        <div class="row">
          <div class="col d-flex justify-content-between align-items-center">
            <h4 class="m-0 d-flex h4">
              <ion-icon name="create-outline"></ion-icon>
              <span class="ml-2">{{ title }}</span>
            </h4>
            {{#if userDetail.id  }}
              {{#if (is_not_equal userDetail.id currentUser.id)}}
                {{#if isAllowDeleted}}
                  <button class="btn btn-style-2 px-5" data-toggle="modal" data-target="#modal-danger">
                    <ion-icon name="person-remove-outline" size="small"></ion-icon>
                    <span class="ml-2">{{ langCommon.btn.delete }}</span>
                  </button>
                {{/if}}
              {{/if}}
            {{/if}}
          </div>
        </div>
      </div>
    </div>
    <section class="content" id="user_registration">
      <div class="container-fluid">
        <form id="user_registration_form">
          <input hidden name="id" value="{{ userDetail.id }}" />
          <div class="card">
            <div class="card-body">
              <div class="row">
                <div class="col-sm-6">
                  <div class="form-group">
                    <label>{{ langCommon.label.name }}</label>
                    <input type="text" class="form-control form-control-lg" value="{{ userDetail.employee.full_name }}" disabled>
                  </div>
                </div>
                <div class="col-sm-6">
                  <div class="form-group">
                    <label for="email">{{ langCommon.label.email }}</label>
                    <input type="text" class="form-control form-control-lg" id="email" value="{{ userDetail.employee.email }}" disabled>
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-sm-6">
                  <div class="form-group">
                    <label for="password">{{ langCommon.label.newPassword }}</label>
                    <input type="password" class="form-control form-control-lg" id="user_password" name="user_password" placeholder="">
                  </div>
                </div>
                <div class="col-sm-6">
                  <div class="form-group">
                    <label>{{ langCommon.label.authority }} <span class="text-danger">*</span></label>
                    <select class="form-control select2 custom-select-lg" name="authority">
                      <option value="" selected="selected">{{ langCommon.label.selectOne }}</option>
                      {{#each roles}}
                        <option value="{{ value }}">{{ name }}</option>
                      {{/each}}
                    </select>
                  </div>
                </div>
              </div>
            </div>
            <div class="card-footer">
              <button type="submit" class="btn-style-1 btn btn-lg my-3 px-5" disabled>
                <ion-icon class="mr-2 mt-1" src="/dist/icons/register.svg" size='small'></ion-icon>
                <span>{{ langCommon.btn.submit }}</span>
              </button>
            </div>
          </div>
        </form>
      </div>
    </section>
  {{/inline}}
  {{#*inline "script"}}
    <script>
      $(function () {
        const passwordRequired = {
          required: true,
          is_valid_password: true,
        };
        {{#if userDetail.id}}
          passwordRequired.required = false;
        {{/if}}
        $('#user_registration_form').validate({
          rules: {
            employee_id: {
              required: true,
            },
            user_password: passwordRequired,
            authority: {
              required: true,
            },
          },
          messages: {
            employee_id: {
              required: "{{ validationMsg.employee_id.required }}",
            },
            user_password: {
              required: "{{ validationMsg.user_password.required }}",
              is_valid_password: "{{ validationMsg.user_password.invalid_format }}",
            },
            authority: {
              required: "{{ validationMsg.authority.required }}",
            },
          },
          errorElement: 'span',
          errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');
            element.closest('.form-group').append(error);
          },
          highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
          },
          unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
          },
          submitHandler: function(form, event) {
            event.preventDefault();
            let payload = {}
            const data = new FormData(form);
            for (const [name,value] of data) {
              payload[name] = value
            }
            payload.employee_id && (payload.employee_id = Number(payload.employee_id))
            payload.authority = Number(payload.authority)
            payload.id && (payload.id = Number(payload.id))
            {{#if userDetail.id}}
              const oldAuthority = "{{ userDetail.authority }}";
              !payload.authority && (payload.authority = Number("{{ userDetail.authority }}"));
              if (Number(oldAuthority) !== payload.authority || payload.user_password) {
                postUserRegistration(payload)
              }
            {{else}}
              postUserRegistration(payload)
            {{/if}}
          }
        });

        {{#if userDetail.id}}
          $('select[name=employee_id]').val("{{ userDetail.employee.id }}").change();
          $('select[name=authority]').val("{{ userDetail.authority }}").change();
          $('select[name="employee_id"]').attr('disabled', 'disabled');
        {{/if}}

        {{#if isNotManage}}
          $('select[name="authority"]').attr('disabled', 'disabled');
        {{/if}}

        $('select[name=employee_id]').on('change', function(e) {
          const selectedEmail = $(this).find(':selected').attr('data-email')
          $('input#email').val(selectedEmail)
        })

        function postUserRegistration(payload) {
          let toastOption = {
            class: 'bg-danger',
            title: 'Fail',
            autohide: true
          }
          jQuery.post("{{routes 'UserRegistration'}}", payload, function(result) {
            if (!result.error) {
              toastOption.class = 'bg-success';
              {{#if userDetail.id}}
                toastOption.title = "{{ langCommon.toast.updateTitle }}";
                toastOption.body = "{{ langCommon.toast.updateSuccess }}";
              {{else}}
                toastOption.title = "{{ langCommon.toast.addTitle }}";
                toastOption.body = "{{ langCommon.toast.addSuccess }}";
              {{/if}}
            } else {
              toastOption.body = result.message
            }
            $(document).Toasts('create', toastOption);

            if (!result.error) {
              setTimeout(() => {
                window.location.href = "{{routes 'UserList'}}";
              }, 800);
            }
          })
        }

        var userDataOrigin = $('#user_registration_form').serialize();
        $('form :input').on('keyup change', () => {
          const formElement = $('#user_registration_form');
          if (!formElement.valid()) {
             $('button[type="submit"]').attr('disabled', 'disabled');
             return;
          }

          if (userDataOrigin !== $('#user_registration_form').serialize()) {
            $('button[type="submit"]').removeAttr('disabled');
          } else {
            $('button[type="submit"]').attr('disabled', 'disabled');
          }
        })
      })
    </script>
  {{/inline}}
{{/admin.layout}}
